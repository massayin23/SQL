SELECT * 
FROM PortfolioProject..CovidDeaths
Where continent is not null
order by 3,4


--SELECT * 
--FROM PortfolioProject..CovidVaccinations
--order by 3,4


SELECT Location, date, total_cases, new_cases, total_deaths, population
From PortfolioProject..CovidDeaths
Order by 1,2 

SELECT Location, date, total_cases, total_deaths, (Total_deaths/total_cases) *100 as DeathPercentage
From PortfolioProject..CovidDeaths
WHERE Location like '%states%'
Order by 1,2 


SELECT Location, date, total_cases, population, (total_cases/population) *100 as PercentPopulationInfected
From PortfolioProject..CovidDeaths
WHERE Location like '%states%'
Order by 1,2 


SELECT Location, Population, MAX(total_cases) as HighestInfectionCount, MAX((total_cases/population))*100 as PercentPopulationInfected
From PortfolioProject..CovidDeaths
--WHERE Location like '%states%'
Group by Location, Population 
Order by PercentPopulationInfected desc

--Showing couuntries with highest death count per population

SELECT Location, MAX(Total_deaths) as TotalDeathCount
From PortfolioProject..CovidDeaths
--WHERE Location like '%states%'
Where continent is not null
Group by Location
Order by TotalDeathCount desc

--Let's break down by continent

SELECT continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths
--WHERE Location like '%states%'
Where continent is not null
Group by continent
Order by TotalDeathCount desc

--Showing continents with the highest deaht count

SELECT continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From PortfolioProject..CovidDeaths
--WHERE Location like '%states%'
Where continent is not null
Group by continent
Order by TotalDeathCount desc

--Global Numbers

SELECT  date, SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_Deaths, SUM(cast(new_Deaths as int))/ SUM(New_Cases)*100 as DeathPercentage
From PortfolioProject..CovidDeaths
--WHERE Location like '%states%'
Where continent is not null 
--Group By date
Order by 1,2 

--Looking at total population vs vaccinations

--USE CTE

With PopvsVac (continent, Location, Date, Population, New_Vaccinations, RollingPeopleVaccinated)
as 
(
Select  dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Convert(Int, vac.new_vaccinations)) OVER (Partition by dea.location Order by dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location 
	and dea.date = vac.date
Where dea.continent is not null 
)
Select *, (RollingPeopleVaccinated/Population)*100
From PopvsVac


--Temp Table

Drop Table if exists #PercentPopulationVaccinated
Create Table #PercentPopulationVaccinated
(
Continent nvarchar(255) 
Location nvarchar (255)
Date datetime, 
Population numeric, 
New_vaccinations numeric, 
RollingPeopleVaccinated numeric 
)

Insert into #PercentPopulationVaccinated
Select  dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Convert(Int, vac.new_vaccinations)) OVER (Partition by dea.location Order by dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location 
	and dea.date = vac.date
--Where dea.continent is not null 

Select *, (RollingPeopleVaccinated/Population)*100
From #PercentPopulationVaccinated


--Creating View to store data for later visualization

Create view PercentPopulationVaccinated as 
Select  dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations
, SUM(Convert(Int, vac.new_vaccinations)) OVER (Partition by dea.location Order by dea.location,
dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From PortfolioProject..CovidDeaths dea
Join PortfolioProject..CovidVaccinations vac
	On dea.location = vac.location 
	and dea.date = vac.date
Where dea.continent is not null 
--Order by 2,3
